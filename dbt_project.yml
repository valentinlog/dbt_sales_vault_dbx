# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_sales_vault_dbx'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_sales_vault_dbx'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
vars:                  #  put project-wide variables here
  hash: MD5  
flags:
  use_materialization_v2: true
seeds:
  dbt_sales_vault_dbx:
    # Config indicated by + and applies to all files under seeds/example/
    +schema: raw        #  seeds always go into the raw schema
    +quote_columns: false
models:
  dbt_sales_vault_dbx:
    staging:
      +schema: stage
      +materialized: view

    raw_vault:
      +schema: raw_vault
      +materialized: incremental

    business_vault:
      +schema: business_vault
      +materialized: incremental

    marts:
      +schema: marts
      +materialized: table

    util:
      +schema: util
      +materialized: table
  
    facts:
      +schema: fact
      +materialized: table
